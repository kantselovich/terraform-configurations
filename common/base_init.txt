Content-Type: multipart/mixed; boundary="===============6019762320482155942=="
MIME-Version: 1.0

--===============6019762320482155942==
Content-Type: text/cloud-config; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="base_cc.txt"

#cloud-config
# Basic system items
locale: en_US.UTF-8

# Add apt repositories
#
# Default: auto select based on cloud metadata
#  in ec2, the default is <region>.archive.ubuntu.com
apt_mirror: http://apt/ubuntu/

# Preserve existing /etc/apt/sources.list
# Default: overwrite sources_list with mirror.  If this is true
# then apt_mirror above will have no effect
apt_preserve_sources_list: false

apt_sources:
 - source: deb http://apt/bamboo-puppet/mirror/apt.puppetlabs.com/ precise main dependencies
   key: |
    -----BEGIN PGP PUBLIC KEY BLOCK-----

    mQINBFe2Iz4BEADqbv/nWmR26bsivTDOLqrfBEvRu9kSfDMzYh9Bmik1A8Z036Eg
    h5+TZD8Rrd5TErLQ6eZFmQXk9yKFoa9/C4aBjmsL/u0yeMmVb7/66i+x3eAYGLzV
    FyunArjtefZyxq0B2mdRHE8kwl5XGl8015T5RGHCTEhpX14O9yigI7gtliRoZcl3
    hfXtedcvweOf9VrV+t5LF4PrZejom8VcB5CE2pdQ+23KZD48+Cx/sHSLHDtahOTQ
    5HgwOLK7rBll8djFgIqP/UvhOqnZGIsg4MzTvWd/vwanocfY8BPwwodpX6rPUrD2
    aXPsaPeM3Q0juDnJT03c4i0jwCoYPg865sqBBrpOQyefxWD6UzGKYkZbaKeobrTB
    xUKUlaz5agSK12j4N+cqVuZUBAWcokXLRrcftt55B8jz/Mwhx8kl6Qtrnzco9tBG
    T5JN5vXMkETDjN/TqfB0D0OsLTYOp3jj4hpMpG377Q+6D71YuwfAsikfnpUtEBxe
    NixXuKAIqrgG8trfODV+yYYWzfdM2vuuYiZW9pGAdm8ao+JalDZss3HL7oVYXSJp
    MIjjhi78beuNflkdL76ACy81t2TvpxoPoUIG098kW3xd720oqQkyWJTgM+wV96bD
    ycmRgNQpvqHYKWtZIyZCTzKzTTIdqg/sbE/D8cHGmoy0eHUDshcE0EtxsQARAQAB
    tEhQdXBwZXQsIEluYy4gUmVsZWFzZSBLZXkgKFB1cHBldCwgSW5jLiBSZWxlYXNl
    IEtleSkgPHJlbGVhc2VAcHVwcGV0LmNvbT6JAj4EEwECACgFAle2Iz4CGwMFCQlm
    AYAGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEH9DgoDvjTSfIN0P/jcCRzK8
    WIdhcNz5dkj7xRZb8Oft2yDfenQmzb1SwGGa96IwJFcjF4Nq7ymcDUqunS2DEDb2
    gCucsqmW1ubkaggsYbc9voz/SQwhsQpBjfWbuyOX9DWmW6av/aB1F85wP79gyfqT
    uidTGxQE6EhDbLe7tuvxOHfM1bKsUtI+0n9TALLLHfXUEdtaXCwMlJuO1IIn1PWa
    H7HzyEjw6OW/cy73oM9nuErBIio1O60slPLOW2XNhdWZJCRWkcXyuumRjoepz7WN
    1JgsLOTcB7rcQaBP3pDN0O/Om5dlDQ6oYitoJs/F0gfEgwK68Uy8k8sUR+FLLJqM
    o0CwOg6CeWU4ShAEd1xZxVYW6VOOKlz9x9dvjIVDn2SlTBDmLS99ySlQS57rjGPf
    GwlRUnuZP4OeSuoFNNJNb9PO6XFSP66eNHFbEpIoBU7phBzwWpTXNsW+kAcY8Rno
    8GzKR/2FRsxe5Nhfh8xy88U7BA0tqxWdqpk/ym+wDcgHBfSRt0dPFnbaHAiMRlgX
    J/NPHBQtkoEdQTKA+ICxcNTUMvsPDQgZcU1/ViLMN+6kZaGNDVcPeMgDvqxu0e/T
    b3uYiId38HYbHmD6rDrOQL/2VPPXbdGbxDGQUgX1DfdOuFXw1hSTilwI1KdXxUXD
    sCsZbchgliqGcI1l2En62+6pI2x5XQqqiJ7+
    =HpaX
    -----END PGP PUBLIC KEY BLOCK-----

 - source: deb http://apt/brightbox/ruby-ng-experimental/ubuntu/ precise main
   key: |
    -----BEGIN PGP PUBLIC KEY BLOCK-----
    Version: SKS 1.1.4

    mI0ETKTCMQEEAMX3ttL4YFO5AQ7Z6L5gaGw57CJBQl6jCv6lka0p8DaGNkeX0Rs9DhINa8qR
    hxJCPK6ijeoNss69G/ni+sMSRViJBFWXzitEE1ew5YM2sw7wLE3guToDu60kaDwIn5mR3GTx
    cgqDrQeCuGZJgz3e2lgmGYw2rAhMe78rRgkR5GFvABEBAAG0G0xhdW5jaHBhZCBQUEEgZm9y
    IEJyaWdodGJveIi4BBMBAgAiBQJMpMIxAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAK
    CRD12l8Jwxc6pl2BA/4p5DFEpGVvkgLj7/YLYCtYmZDw8i/drGbkWfIQiOgPWIf8QgpJXVME
    1tkH8N1ssjbJlUKl/HubNBKZ6HDyQsQASFug+eI6KhSFMScDBf/oMX3zVCTTvUkgJtOWYc5d
    77zJacEUGoSEx63QUJVvp/LAnqkZbt17JJL6HOou/CNicw==
    =G8vE
    -----END PGP PUBLIC KEY BLOCK-----


apt_update: false
apt_upgrade: false


--===============6019762320482155942==
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="base_sh.txt"

#!/bin/bash

exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1

date > /tmp/cloudscript.start

# Determine OS LSB distribution code name and set variables as appropriate

if grep -q "Precise Pangolin" /etc/os-release ; then
  echo "Running Precise, starting base tasks specific to Ubuntu Precise ...";
  LSBDISTCODENAME="precise";
  PUPPETAPTREPOS="main dependencies"
  PUPPET_VERSION="3.3.1-1puppetlabs1"
  FACTER_VERSION="1.7.3-1puppetlabs1"
  HIERA_VERSION="1.2.1-1puppetlabs1"
elif grep -q "Trusty Tahr" /etc/os-release ; then
  echo "Running Trusty, starting base tasks specific to Ubuntu Trusty ...";
  LSBDISTCODENAME="trusty";
  PUPPETAPTREPOS="main"
  PUPPET_VERSION="3.8.1-1puppetlabs1"
  FACTER_VERSION="2.4.4-1puppetlabs1"
  HIERA_VERSION="1.3.4-1puppetlabs1"
  ln -s /usr/bin/update-alternatives /usr/sbin/update-alternatives
  ln -s /usr/sbin/nologin /sbin/nologin
else
  echo "ERROR: apparently not using trusty or precise - so we'll arbitrary use precise repos ...";
  LSBDISTCODENAME="precise";
  PUPPETAPTREPOS="main dependencies"
  PUPPET_VERSION="3.3.1-1puppetlabs1"
  FACTER_VERSION="1.7.3-1puppetlabs1"
  HIERA_VERSION="1.2.1-1puppetlabs1"
fi

/bin/cat > /etc/apt/sources.list << EOF
# brightbox
deb [ arch=amd64 ] http://apt/brightbox/ruby-ng-experimental/ubuntu/ ${LSBDISTCODENAME} main
# puppet
deb [ arch=amd64 ] http://apt/bamboo-puppet/mirror/apt.puppetlabs.com/ ${LSBDISTCODENAME} ${PUPPETAPTREPOS}
# ubuntu
deb [ arch=amd64 ] http://apt/ubuntu/ ${LSBDISTCODENAME} main restricted universe multiverse
# ubuntu-security
deb [ arch=amd64 ] http://apt/ubuntu/ ${LSBDISTCODENAME}-security main restricted universe multiverse
# ubuntu-updates
deb [ arch=amd64 ] http://apt/ubuntu/ ${LSBDISTCODENAME}-updates main restricted universe multiverse
EOF

groupadd -g 800 puppet
useradd -d /var/lib/puppet -g 800 -M -s /bin/bash -u 800 puppet
apt-get -qq -y update
apt-get -qq -y purge linux-headers-virtual linux-image-virtual linux-virtual
apt-mark hold puppet facter hiera
#Not as sure if we need to lock the mcollective packages, but I'm being paranoid
apt-mark hold mcollective-nettest-agent mcollective-nettest-common mcollective-package-common mcollective-package-agent mcollective-puppet-agent mcollective-puppet-common mcollective-service-common mcollective-service-agent
apt-get -qq -y upgrade
apt-mark unhold puppet facter hiera
apt-mark unhold mcollective-nettest-agent mcollective-nettest-common mcollective-package-common mcollective-package-agent mcollective-puppet-agent mcollective-puppet-common mcollective-service-common mcollective-service-agent
apt-get -qq -y install ruby1.9.1 ldap-utils puppet-common=${PUPPET_VERSION} puppet=${PUPPET_VERSION} facter=${FACTER_VERSION} hiera=${HIERA_VERSION}

# If there's a static route for 169.254.169.254, we are in Mirantis and don't need to modify the metadata service
/sbin/route -n | grep ^169.254.169.254 > /dev/null
if [ $? -eq 0 ]; then
  echo "Static route for 169.254.169.254 detected, using metadata service at 169.254.169.254";
  METADATASERVICE="169.254.169.254";
else
  echo "Determining legacy RLPC metadata service ...";
	IP=`/sbin/ip a show dev eth0 | /bin/grep inet | /usr/bin/awk '{print $2}'`; 
	if [[ ${IP} =~ ^10.125 ]]; then METADATASERVICE="10.125.24.10:8775"; 
	elif [[ ${IP} =~ ^10.126 ]]; then METADATASERVICE="10.126.24.10:8775"; 
	elif [[ ${IP} =~ ^10.127 ]]; then METADATASERVICE="10.127.24.13:8775"; 
	elif [[ ${IP} =~ ^10.101 ]]; then METADATASERVICE="10.101.24.1:8775"; 
	else echo "Likely metadata service failure impending ..."; METADATASERVICE="169.254.169.254"; 
	fi
fi

HOSTNAME=`/usr/bin/curl -s http://${METADATASERVICE}/latest/meta-data/hostname | /bin/sed -e's/\.novalocal//'`
INSTANCEID=`/bin/date +%s`.`/usr/bin/openssl rand -hex 4`

echo "Setting hostname as $HOSTNAME" && hostname $HOSTNAME
echo "$HOSTNAME" > /etc/hostname
echo "Appending reachlocal.com to DNS search order" && sed 's/search.*/& reachlocal.com/g' /etc/resolv.conf | /sbin/resolvconf -a eth0.inet && /sbin/resolvconf -u || echo "resolv.conf update failed -- access to services may be impaired"


echo "Writing out base puppet config" && /bin/cat > /etc/puppet/puppet.conf << EOF
[main]
logdir=/var/log/puppet
vardir=/var/lib/puppet
ssldir=/var/lib/puppet/ssl
rundir=/var/run/puppet
factpath=/var/lib/puppet/lib/facter
templatedir=/etc/puppet/templates

[agent]
# These are needed when the puppetmaster is run by passenger
# and can safely be removed if webrick is used.
ssl_client_header = SSL_CLIENT_S_DN 
ssl_client_verify_header = SSL_CLIENT_VERIFY
# This flushes logs out after every operation.  Useful for testing.
autoflush = true
runinterval = 900
splay = true
splaylimit = 120
certname = $HOSTNAME.$INSTANCEID.rlpc
EOF

/bin/cat > /etc/rlpc.ldif << EOF
dn: cn=$HOSTNAME.$INSTANCEID.rlpc,ou=Hosts,dc=reachlocal,dc=com
objectClass: device
objectClass: puppetClient
objectClass: top
cn: $HOSTNAME.$INSTANCEID.rlpc
puppetClass: base
parentnode: default
EOF

/usr/bin/curl -s http://${METADATASERVICE}/openstack/latest/meta_data.json | /usr/bin/python -mjson.tool > /etc/rlpc.meta

PENV=$(/bin/grep puppetEnv /etc/rlpc.meta | /usr/bin/cut -d: -f2- | /usr/bin/tr -d \" | /usr/bin/tr -d , | /usr/bin/tr -d [:space:])
if [ "$PENV" == '' ]; then
    PENV='dev'
fi
echo "environment: $PENV" >> /etc/rlpc.ldif

PCLASSES=$(/bin/grep puppetClasses /etc/rlpc.meta | /usr/bin/cut -d: -f2- | /usr/bin/tr -d \" | /usr/bin/tr -d , | /usr/bin/tr -d [:space:] | /usr/bin/tr "|" "\n")
for pclass in $PCLASSES
do
        echo "puppetClass: $pclass" >> /etc/rlpc.ldif
done
PVARS=$(/bin/grep puppetVars /etc/rlpc.meta | /usr/bin/cut -d: -f2- | /usr/bin/tr -d \" | /usr/bin/tr -d , | /usr/bin/tr -d [:space:] | /usr/bin/tr "|" "\n")
for pvar in $PVARS
do
	echo "puppetVar: $pvar" >> /etc/rlpc.ldif
done
if ! egrep "^puppetVar: branch=" /etc/rlpc.ldif &> /dev/null ; then
    echo "puppetVar: branch=${PENV}" >> /etc/rlpc.ldif
fi
echo "Attempting to check self into LDAP by submitting below LDIF via /etc/rlpc.ldif:" && cat /etc/rlpc.ldif

/usr/bin/ldapadd -f /etc/rlpc.ldif -D "cn=PuppetMaster,dc=reachlocal,dc=com" -H ldap://auth -x -w Pr0j3ct_2501 || (/usr/bin/ldapdelete -D "cn=PuppetMaster,dc=reachlocal,dc=com" -H ldap://auth -x -w Pr0j3ct_2501 "cn=$HOSTNAME.$INSTANCEID.rlpc,ou=Hosts,dc=reachlocal,dc=com" && /usr/bin/ldapadd -f /etc/rlpc.ldif -D "cn=PuppetMaster,dc=reachlocal,dc=com" -H ldap://auth -x -w Pr0j3ct_2501)

if [ $? -ne 0 ]; then
    echo "Insert of ldif into ldap failed.  Inserting default record."
    /bin/cat > /etc/rlpc.ldif.default << EOF
dn: cn=$HOSTNAME.$INSTANCEID.rlpc,ou=Hosts,dc=reachlocal,dc=com
objectClass: device
objectClass: puppetClient
objectClass: top
cn: $HOSTNAME.$INSTANCEID.rlpc
puppetClass: base
parentnode: default
EOF
  /usr/bin/ldapadd -f /etc/rlpc.ldif.default -D "cn=PuppetMaster,dc=reachlocal,dc=com" -H ldap://auth -x -w Pr0j3ct_2501 || (/usr/bin/ldapdelete -D "cn=PuppetMaster,dc=reachlocal,dc=com" -H ldap://auth -x -w Pr0j3ct_2501 "cn=$HOSTNAME.$INSTANCEID.rlpc,ou=Hosts,dc=reachlocal,dc=com" && /usr/bin/ldapadd -f /etc/rlpc.ldif.default -D "cn=PuppetMaster,dc=reachlocal,dc=com" -H ldap://auth -x -w Pr0j3ct_2501)

    if [ $? -ne 0 ]; then
        echo "Insert of default ldif failed."
    fi
fi
# massage system ruby
/usr/sbin/update-alternatives --set ruby `find /usr/bin/ -type f -name ruby* | sort | tail -1`
# set local gem source
/usr/bin/gem source --add http://gems
# add good gems
/usr/bin/gem install pry --no-ri --no-rdoc --conservative
# add gems necessary for puppet
/usr/bin/gem install net-ldap --version '= 0.12.0' --no-ri --no-rdoc --conservative
/usr/bin/gem install rl-fig --no-ri --no-rdoc --conservative
/bin/sed -i 's/START=no/START=yes/g' /etc/default/puppet
date > /tmp/puppet.start
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
interfaces=( `ip link show | egrep "^[0-9]*:"| cut -d":" -f 2 | grep -v "lo"` )
for i in ${interfaces[@]} ; do 
    if ! grep ${i} /etc/network/interfaces &> /dev/null ; then 
        echo
        echo "auto ${i}" >> /etc/network/interfaces
        echo "iface ${i} inet dhcp" >> /etc/network/interfaces; 
        ifup ${i}
    fi
    # Lock interface names to the current MAC in case the vif order changes due to libvirtd
    iface_MAC=`ip link show ${i} | tail -1 | awk '{print $2}'`
    echo "KERNEL==\"eth*\", ATTR{address}==\"${iface_MAC}\", NAME=\"${i}\"" >> /etc/udev/rules.d/75-persistent-net-reachlocal.rules
done
/usr/bin/puppet agent -t
ec=$?
echo $? > /tmp/puppet.exitcode
date > /tmp/puppet.stop
if [ $ec -eq 2 ]; then
    exit 0
fi
exit $ec
